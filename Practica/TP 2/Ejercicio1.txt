1. Existen N personas que deben ser chequeadas por un detector de metales antes de poder ingresar al avión.


a. Analice el problema y defina qué procesos, recursos y semáforos serán necesarios/convenientes, además de
   las posibles sincronizaciones requeridas para resolver el problema.
        SC= detector de metales
        semaforo general (numeros>=0) donde dira si pueden o no pasar a usar el detector.

b. Implemente una solución que modele el acceso de las personas a un detector (es decir,
 si el detector está libre la persona lo puede utilizar; en caso contrario, debe esperar).
    
    sem libre=1;
    process pasajero [id:0..n-1] ::
    {
        p(libre);
        SC;
        V(libre);
    }

c. Modifique su solución para el caso que haya tres detectores.
   - Para que haya 3 detectores habria que mantener el conteo de la cantidad en el semaforo.
    o sea "p(libre)" hara que semaforo > 0 dejando pasar para usar el recurso, cuando se libera uno pasaria al siguiente,
    como no hay orden cumpliria. 

    sem libre=3;                            //nos indica si hay detectores libres
    sem accesoVar=1;
    Detector[] detectores([3] detector)     //nos indica el recurso libre
    
    process pasajero [id:0..n-1]::
     {
        Detector recurso;

        P(libre);                                   //pregunto si hay recursos libres, si hay     
            P(accesoVar);                           //accedo a var de recursos
                recurso = detectores.pop();     
            V(accesoVar);                           //libero la cola de recursos
            SC;
            P(accesoVar);
                detectores.push(recurso);
            V(accesoVar);
        V(libre);                                   //aviso que el recurso esta libre
    }

