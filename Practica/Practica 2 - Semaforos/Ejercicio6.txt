https://fabian-martinez-rincon.github.io/Programacion-Concurrente/Documentos/Practica2.html#ejercicio-4

6.Existen N personas que deben imprimir un trabajo cada una.
 Resolver cada ítem usando semáforos:
    a)Implemente una solución suponiendo que existe una única impresora compartida
     por todas las personas, y las mismas la deben usar de a una persona a la vez,
     sin importar el orden. Existe una función Imprimir(documento) llamada por la
     persona que simula el uso de la impresora. Sólo se deben usar los procesos que
     representan a las Personas.

      sem libre = 1 ;
      
      Process persona [0..N-1]::{
         ***creo Documento***
         P(libre);
            imprimir(documento);
         V(libre);
      }

    b) Modifique la solución de (a) para el caso en que se deba respetar el orden de llegada.
      
      sem[] colaEspera=([N] 0);
      sem encolar =1;
      Cola colaPersonas;
      boolean libre=true;

      Process persona [id: 0..N-1]::{
         int aux; 

         ***creo Documento***
         P(encolar);
            if (libre){
               libre = false
               V(encolar)
            }else{
               colaPersonas.encolar(id);     //me encolo
               V(encolar);                   //libero var libre
               p(colaEspera[id]);            //quedo a la espera del aviso que me toca: V(colaEspera[id]);
            }
            imprimir(Documento);
            P(encolar);
               if (colaPersonas.empy())
                  libre=true;
               else
                  aux = colaPersonas.pop();
                  v(colaEspera[aux]);        //aviso al proximo de la lista que sigue.
            V(encolar);

    c) Modifique la solución de (a) para el caso en que se deba respetar estrictamente el orden dado por el identificador
      del proceso (la persona X no puede usar la impresora hasta que no haya terminado de usarla la persona X-1).
      
      colaOrdenada cola;   //esta cola esta ordenada por id
      sem var=1;  sem[] colaEspera([N] 0);
      boolean libre = true;

      process persona [id: 0..N-1]::{
         int aux;

         P(var);                 //solicito usar var globales
            if (libre){          
               libre=false;
               v(var);
            }else{
               cola.insertarOrdenado(id);
               v(var);
               p(colaEspera[id]);
            }
            imprimir (Documento);
            P(var);
               if(cola.empy()){
                  libre = true;
               }else{
                  aux = cola.pop();
                  v(colaEspera[aux]);
               }
            V(var)
      }

    d) Modifique la solución de (b) para el caso en que además hay un proceso Coordinador       
       que le indica a cada persona que es su turno de usar la impresora.

      sem[] colaEspera=([N] 0);
      sem varGlobal =1;
      Cola colaPersonas;
      boolean libre=true;

      Process persona [id: 0..N-1]::{
         ***creo Documento***
         P(varGlobal);
            colaPersonas.push(id);     //me encolo
         V(varGlobal);                 //libero var libre
         p(colaEspera[id]);            //quedo a la espera del aviso que me toca: V(colaEspera[id]);
            imprimir(Documento);
         v(colaEspera[id]);        //aviso al proximo de la lista que sigue.
      }   

      Process coordinador:: {
         int aux;

         while (true){
            P(varGlobal);
            if (!colaPersonas.empy()){}
               aux=colaPersonas.pop();
               
         }
      }

    e) Modificar la solución (d) para el caso en que sean 5 impresoras. El coordinador
       le indica a la persona cuando puede usar una impresora, y cual debe usar.